version: '3.8'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: motorental
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - motorental-net

  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_DATABASE: motorental
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - motorental-net

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - motorental-net

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
    - ASPNETCORE_URLS=http://+:8080
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - motorental-net

volumes:
  postgres_data:
  mongodb_data:
  minio_data:

networks:
  motorental-net:
    driver: bridge